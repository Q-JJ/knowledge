const n=JSON.parse(`{"key":"v-3a9c81f3","path":"/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/%E6%8B%93%E5%B1%95/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html","title":"优化","lang":"zh-CN","frontmatter":{"icon":"date","order":3,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"优化 useMemo 作用：它在每次重新渲染的时候能够缓存计算的结果 import { useState } from 'react' function factorialOf(n) { console.log('斐波那契函数执行了') return n &lt;= 0 ? 1 : n * factorialOf(n - 1) } function App() { const [count, setCount] = useState(0) // 计算斐波那契之和 const sumByCount = factorialOf(count) const [num, setNum] = useState(0) return ( &lt;&gt; {sum} &lt;button onClick={() =&gt; setCount(count + 1)}&gt;+count:{count}&lt;/button&gt; &lt;button onClick={() =&gt; setNum(num + 1)}&gt;+num:{num}&lt;/button&gt; &lt;/&gt; ) } export default App","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/%E6%8B%93%E5%B1%95/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"优化"}],["meta",{"property":"og:description","content":"优化 useMemo 作用：它在每次重新渲染的时候能够缓存计算的结果 import { useState } from 'react' function factorialOf(n) { console.log('斐波那契函数执行了') return n &lt;= 0 ? 1 : n * factorialOf(n - 1) } function App() { const [count, setCount] = useState(0) // 计算斐波那契之和 const sumByCount = factorialOf(count) const [num, setNum] = useState(0) return ( &lt;&gt; {sum} &lt;button onClick={() =&gt; setCount(count + 1)}&gt;+count:{count}&lt;/button&gt; &lt;button onClick={() =&gt; setNum(num + 1)}&gt;+num:{num}&lt;/button&gt; &lt;/&gt; ) } export default App"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T05:24:04.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T05:24:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"优化\\",\\"description\\":\\"优化 useMemo 作用：它在每次重新渲染的时候能够缓存计算的结果 import { useState } from 'react' function factorialOf(n) { console.log('斐波那契函数执行了') return n &lt;= 0 ? 1 : n * factorialOf(n - 1) } function App() { const [count, setCount] = useState(0) // 计算斐波那契之和 const sumByCount = factorialOf(count) const [num, setNum] = useState(0) return ( &lt;&gt; {sum} &lt;button onClick={() =&gt; setCount(count + 1)}&gt;+count:{count}&lt;/button&gt; &lt;button onClick={() =&gt; setNum(num + 1)}&gt;+num:{num}&lt;/button&gt; &lt;/&gt; ) } export default App\\"}"]]},"headers":[{"level":2,"title":"useMemo","slug":"usememo","link":"#usememo","children":[]},{"level":2,"title":"React.memo","slug":"react-memo","link":"#react-memo","children":[{"level":3,"title":"props的比较机制","slug":"props的比较机制","link":"#props的比较机制","children":[]}]},{"level":2,"title":"useCallback","slug":"usecallback","link":"#usecallback","children":[]},{"level":2,"title":"错误边界","slug":"错误边界","link":"#错误边界","children":[]},{"level":2,"title":"6. 组件优化","slug":"_6-组件优化","link":"#_6-组件优化","children":[]}],"git":{"createdTime":1705296244000,"updatedTime":1705296244000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":4.68,"words":1404},"filePathRelative":"qianduan/框架学习/react/拓展/性能优化.md","localizedDate":"2022年7月23日","excerpt":"<h1> 优化</h1>\\n<h2> useMemo</h2>\\n<p>作用：它在每次重新渲染的时候能够缓存计算的结果</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> useState <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'react'</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">factorialOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">n</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'斐波那契函数执行了'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">return</span> n <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">:</span> n <span class=\\"token operator\\">*</span> <span class=\\"token function\\">factorialOf</span><span class=\\"token punctuation\\">(</span>n <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">App</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>count<span class=\\"token punctuation\\">,</span> setCount<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">useState</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token comment\\">// 计算斐波那契之和</span>\\n  <span class=\\"token keyword\\">const</span> sumByCount <span class=\\"token operator\\">=</span> <span class=\\"token function\\">factorialOf</span><span class=\\"token punctuation\\">(</span>count<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>num<span class=\\"token punctuation\\">,</span> setNum<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">useState</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n      </span><span class=\\"token punctuation\\">{</span>sum<span class=\\"token punctuation\\">}</span><span class=\\"token plain-text\\">\\n      </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">onClick</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">setCount</span><span class=\\"token punctuation\\">(</span>count <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">+count:</span><span class=\\"token punctuation\\">{</span>count<span class=\\"token punctuation\\">}</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n      </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">onClick</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">setNum</span><span class=\\"token punctuation\\">(</span>num <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">+num:</span><span class=\\"token punctuation\\">{</span>num<span class=\\"token punctuation\\">}</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n    </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> App\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
