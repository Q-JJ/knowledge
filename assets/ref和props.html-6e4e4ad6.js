import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as t,c as p,b as e,d as s,e as r,f as l}from"./app-131d0148.js";const i={},c=l(`<h1 id="ref和props" tabindex="-1"><a class="header-anchor" href="#ref和props" aria-hidden="true">#</a> ref和Props</h1><h2 id="ref属性" tabindex="-1"><a class="header-anchor" href="#ref属性" aria-hidden="true">#</a> ref属性</h2><p>ref 被⽤来给元素或⼦组件注册引⽤信息（id的替代者）</p><ul><li>应⽤在 html 标签上获取的是<mark>真实 DOM元素</mark></li><li>应⽤在组件标签上获取的是组件实例对象（vc ）</li><li>使⽤⽅式 <ol><li>打标识：<code>&lt;h1 ref=&quot;xxx&quot;&gt;.....&lt;/h1&gt;</code> 或 <code>&lt;School ref=&quot;xxx&quot;&gt;&lt;/School&gt;</code></li><li>获取：<code>this.$refs.xxx</code></li></ol></li></ul><h2 id="_3-props属性" tabindex="-1"><a class="header-anchor" href="#_3-props属性" aria-hidden="true">#</a> 3. props属性</h2><ol><li><p>功能：让组件接收外部传过来的数据</p></li><li><p>传递数据：<code>&lt;Demo :name=&quot;xxx&quot;/&gt;</code></p></li><li><p>接收数据：</p><ul><li><p>第一种方式（只接收）：<code>props:[&#39;name&#39;] </code></p></li><li><p>第二种方式（限制类型）：<code>props:{name:String}</code></p></li><li><p>第三种方式（限制类型、限制必要性、指定默认值）：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{</span>
 <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span>
 <span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span> <span class="token comment">//类型</span>
 <span class="token literal-property property">required</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//必要性</span>
 <span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&#39;湫&#39;</span> <span class="token comment">//默认值</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>props是只读的，Vue底层会监测你对props的修改，如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制props的内容到data中一份，然后去修改data中的数据。</p></div><ol start="4"><li><p>props适用于：</p><ul><li>父组件 ==&gt; 子组件 通信</li><li>子组件 ==&gt; 父组件 通信（要求父先给子一个函数）</li></ul></li><li><p>使用v-model时要切记：v-model绑定的值不能是props传过来的值，因为props是不可以修改的(单向数据流<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>)</p></li><li><p>props传过来的若是对象类型的值，修改对象中的属性时Vue不会报错，但不推荐这样做。</p></li></ol><hr class="footnotes-sep">`,9),d={class:"footnotes"},u={class:"footnotes-list"},f={id:"footnote1",class:"footnote-item"},h={href:"https://v2.cn.vuejs.org/v2/guide/components-props.html#%E5%8D%95%E5%90%91%E6%95%B0%E6%8D%AE%E6%B5%81",target:"_blank",rel:"noopener noreferrer"},m=e("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function v(k,_){const o=n("ExternalLinkIcon");return t(),p("div",null,[c,e("section",d,[e("ol",u,[e("li",f,[e("p",null,[e("a",h,[s("单向数据流"),r(o)]),s(),m])])])])])}const b=a(i,[["render",v],["__file","ref和props.html.vue"]]);export{b as default};
