const n=JSON.parse(`{"key":"v-03da42f9","path":"/qianduan/%E5%9F%BA%E7%A1%80/JS/10.%E8%8A%82%E6%B5%81%E9%98%B2%E6%8A%96.html","title":"节流防抖","lang":"zh-CN","frontmatter":{"order":10,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"节流防抖 节流：在规定的时间内，函数只能被调用一次，且是最先被触发调用的那次。 防抖：多次触发事件，事件处理函数只能执行一次，并且是在触发操作结束时执行。 使用场景 节流：滚动加载更多、搜索框搜的索联想功能、高频点击、表单重复提交…… //节流 function throttle(fn, delay) { //记录上一次函数触发的时间 var lastTime = 0; return function(){ //记录当前函数触发的时间 var nowTime = Date.now(); if(nowTime - lastTime &gt; delay){ //修正this指向问题 fn.call(this); //同步执行结束时间 lastTime = nowTime; } } } function throttle2(func, wait = 0) { let timeId return function (...args) { if (timeId !== undefined) { return } timeId = setTimeout(() =&gt; { func.apply(this, args) timeId = undefined }, wait) } } document.onscroll = throttle(function () { console.log('scllor事件被触发了' + Date.now()); }, 200);","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/qianduan/%E5%9F%BA%E7%A1%80/JS/10.%E8%8A%82%E6%B5%81%E9%98%B2%E6%8A%96.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"节流防抖"}],["meta",{"property":"og:description","content":"节流防抖 节流：在规定的时间内，函数只能被调用一次，且是最先被触发调用的那次。 防抖：多次触发事件，事件处理函数只能执行一次，并且是在触发操作结束时执行。 使用场景 节流：滚动加载更多、搜索框搜的索联想功能、高频点击、表单重复提交…… //节流 function throttle(fn, delay) { //记录上一次函数触发的时间 var lastTime = 0; return function(){ //记录当前函数触发的时间 var nowTime = Date.now(); if(nowTime - lastTime &gt; delay){ //修正this指向问题 fn.call(this); //同步执行结束时间 lastTime = nowTime; } } } function throttle2(func, wait = 0) { let timeId return function (...args) { if (timeId !== undefined) { return } timeId = setTimeout(() =&gt; { func.apply(this, args) timeId = undefined }, wait) } } document.onscroll = throttle(function () { console.log('scllor事件被触发了' + Date.now()); }, 200);"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T05:24:04.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T05:24:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"节流防抖\\",\\"description\\":\\"节流防抖 节流：在规定的时间内，函数只能被调用一次，且是最先被触发调用的那次。 防抖：多次触发事件，事件处理函数只能执行一次，并且是在触发操作结束时执行。 使用场景 节流：滚动加载更多、搜索框搜的索联想功能、高频点击、表单重复提交…… //节流 function throttle(fn, delay) { //记录上一次函数触发的时间 var lastTime = 0; return function(){ //记录当前函数触发的时间 var nowTime = Date.now(); if(nowTime - lastTime &gt; delay){ //修正this指向问题 fn.call(this); //同步执行结束时间 lastTime = nowTime; } } } function throttle2(func, wait = 0) { let timeId return function (...args) { if (timeId !== undefined) { return } timeId = setTimeout(() =&gt; { func.apply(this, args) timeId = undefined }, wait) } } document.onscroll = throttle(function () { console.log('scllor事件被触发了' + Date.now()); }, 200);\\"}"]]},"headers":[{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]}],"git":{"createdTime":1703821940000,"updatedTime":1705296244000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":2}]},"readingTime":{"minutes":1.21,"words":363},"filePathRelative":"qianduan/基础/JS/10.节流防抖.md","localizedDate":"2022年7月23日","excerpt":"<h1> 节流防抖</h1>\\n<p>节流：在规定的时间内，函数只能被调用一次，且是最先被触发调用的那次。</p>\\n<p>防抖：多次触发事件，事件处理函数只能执行一次，并且是在触发操作结束时执行。</p>\\n<h2> 使用场景</h2>\\n<ul>\\n<li>节流：滚动加载更多、搜索框搜的索联想功能、高频点击、表单重复提交……</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">//节流</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">throttle</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">fn<span class=\\"token punctuation\\">,</span> delay</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//记录上一次函数触发的时间</span>\\n    <span class=\\"token keyword\\">var</span> lastTime <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">//记录当前函数触发的时间</span>\\n        <span class=\\"token keyword\\">var</span> nowTime <span class=\\"token operator\\">=</span> Date<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>nowTime <span class=\\"token operator\\">-</span> lastTime <span class=\\"token operator\\">&gt;</span> delay<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">//修正this指向问题</span>\\n            <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">call</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token comment\\">//同步执行结束时间</span>\\n            lastTime <span class=\\"token operator\\">=</span> nowTime<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">throttle2</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">func<span class=\\"token punctuation\\">,</span> wait <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> timeId\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\"><span class=\\"token operator\\">...</span>args</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>timeId <span class=\\"token operator\\">!==</span> <span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    timeId <span class=\\"token operator\\">=</span> <span class=\\"token function\\">setTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">func</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">apply</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">)</span>\\n      timeId <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">undefined</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> wait<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\ndocument<span class=\\"token punctuation\\">.</span>onscroll <span class=\\"token operator\\">=</span> <span class=\\"token function\\">throttle</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'scllor事件被触发了'</span> <span class=\\"token operator\\">+</span> Date<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> \\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
