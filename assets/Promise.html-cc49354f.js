const e=JSON.parse('{"key":"v-47747dd0","path":"/%E7%BB%8F%E9%AA%8C%E5%B0%8F%E8%AE%B0/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89/Promise.html","title":"Promise","lang":"zh-CN","frontmatter":{"icon":"date","order":10,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"Promise 手写Promise 一个promise有三种状态：pending（初始状态），fulfilled（成功），rejected（失败）。 then方法 then方法有两个回调函数onFulfilled和onRejected，当promise成功执行第一个函数参数，失败执行第二个函数参数。 处理逻辑[^1]：如果 onFulfilled 不是一个函数，则内部会被替换为一个恒等函数（(x) =&gt; x），它只是简单地将兑现值向前传递。如果 onRejected 不是一个函数，则内部会被替换为一个抛出器函数（(x) =&gt; { throw x; }），它会抛出它收到的拒绝原因。","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/%E7%BB%8F%E9%AA%8C%E5%B0%8F%E8%AE%B0/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89/Promise.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"Promise"}],["meta",{"property":"og:description","content":"Promise 手写Promise 一个promise有三种状态：pending（初始状态），fulfilled（成功），rejected（失败）。 then方法 then方法有两个回调函数onFulfilled和onRejected，当promise成功执行第一个函数参数，失败执行第二个函数参数。 处理逻辑[^1]：如果 onFulfilled 不是一个函数，则内部会被替换为一个恒等函数（(x) =&gt; x），它只是简单地将兑现值向前传递。如果 onRejected 不是一个函数，则内部会被替换为一个抛出器函数（(x) =&gt; { throw x; }），它会抛出它收到的拒绝原因。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T05:24:04.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T05:24:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Promise\\",\\"description\\":\\"Promise 手写Promise 一个promise有三种状态：pending（初始状态），fulfilled（成功），rejected（失败）。 then方法 then方法有两个回调函数onFulfilled和onRejected，当promise成功执行第一个函数参数，失败执行第二个函数参数。 处理逻辑[^1]：如果 onFulfilled 不是一个函数，则内部会被替换为一个恒等函数（(x) =&gt; x），它只是简单地将兑现值向前传递。如果 onRejected 不是一个函数，则内部会被替换为一个抛出器函数（(x) =&gt; { throw x; }），它会抛出它收到的拒绝原因。\\"}"]]},"headers":[{"level":2,"title":"手写Promise","slug":"手写promise","link":"#手写promise","children":[{"level":3,"title":"then方法","slug":"then方法","link":"#then方法","children":[]},{"level":3,"title":"异步调用和多次调用","slug":"异步调用和多次调用","link":"#异步调用和多次调用","children":[]},{"level":3,"title":"链式编程","slug":"链式编程","link":"#链式编程","children":[]}]}],"git":{"createdTime":1705296244000,"updatedTime":1705296244000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":1.95,"words":586},"filePathRelative":"经验小记/前端知识整理（重要）/Promise.md","localizedDate":"2022年7月23日","excerpt":"<h1> Promise</h1>\\n<h2> 手写Promise</h2>\\n<p>一个promise有三种状态：pending（初始状态），fulfilled（成功），rejected（失败）。</p>\\n<h3> then方法</h3>\\n<p>then方法有两个回调函数onFulfilled和onRejected，当promise成功执行第一个函数参数，失败执行第二个函数参数。</p>\\n<p>处理逻辑[^1]：如果 onFulfilled 不是一个函数，则内部会被替换为一个恒等函数（(x) =&gt; x），它只是简单地将兑现值向前传递。如果 onRejected 不是一个函数，则内部会被替换为一个抛出器函数（(x) =&gt; { throw x; }），它会抛出它收到的拒绝原因。</p>","autoDesc":true}');export{e as data};
