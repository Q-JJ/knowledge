const n=JSON.parse('{"key":"v-11fb822a","path":"/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/%E5%9F%BA%E7%A1%80%E7%AF%87/%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1.html","title":"React 组件通信","lang":"zh-CN","frontmatter":{"icon":"date","order":3,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"React 组件通信 在react组件间通信常见的几种情况有：父子组件通信、兄弟（非嵌套）组件通信、祖孙（跨级）组件通信。 父子组件通信 父组件向子组件通信只需采用props方式传递信息，子组件中也可以通过props获取这个值。 子组件向父组件则采用props + Callback的方式，父组件为子组件绑定一个函数属性，当子组件需要给父组件传值的时候，则通过props调用该函数将参数传入到该函数当中，此时就可以在父组件中的函数中接收到该参数。 // 父 -&gt; 子 export default class Parent extends Component { handleClick = (data) =&gt; { console.log(\\"this :&gt;&gt; \\", this); alert(data); }; render() { return ( &lt;div className=\\"parent\\"&gt; &lt;h3&gt;我是父组件&lt;/h3&gt; {/* 通过props向子组件传name */} &lt;Child name=\\"湫\\" myClick={this.handleClick} /&gt; &lt;/div&gt; ); } }","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/%E5%9F%BA%E7%A1%80%E7%AF%87/%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"React 组件通信"}],["meta",{"property":"og:description","content":"React 组件通信 在react组件间通信常见的几种情况有：父子组件通信、兄弟（非嵌套）组件通信、祖孙（跨级）组件通信。 父子组件通信 父组件向子组件通信只需采用props方式传递信息，子组件中也可以通过props获取这个值。 子组件向父组件则采用props + Callback的方式，父组件为子组件绑定一个函数属性，当子组件需要给父组件传值的时候，则通过props调用该函数将参数传入到该函数当中，此时就可以在父组件中的函数中接收到该参数。 // 父 -&gt; 子 export default class Parent extends Component { handleClick = (data) =&gt; { console.log(\\"this :&gt;&gt; \\", this); alert(data); }; render() { return ( &lt;div className=\\"parent\\"&gt; &lt;h3&gt;我是父组件&lt;/h3&gt; {/* 通过props向子组件传name */} &lt;Child name=\\"湫\\" myClick={this.handleClick} /&gt; &lt;/div&gt; ); } }"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T05:24:04.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T05:24:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"React 组件通信\\",\\"description\\":\\"React 组件通信 在react组件间通信常见的几种情况有：父子组件通信、兄弟（非嵌套）组件通信、祖孙（跨级）组件通信。 父子组件通信 父组件向子组件通信只需采用props方式传递信息，子组件中也可以通过props获取这个值。 子组件向父组件则采用props + Callback的方式，父组件为子组件绑定一个函数属性，当子组件需要给父组件传值的时候，则通过props调用该函数将参数传入到该函数当中，此时就可以在父组件中的函数中接收到该参数。 // 父 -&gt; 子 export default class Parent extends Component { handleClick = (data) =&gt; { console.log(\\\\\\"this :&gt;&gt; \\\\\\", this); alert(data); }; render() { return ( &lt;div className=\\\\\\"parent\\\\\\"&gt; &lt;h3&gt;我是父组件&lt;/h3&gt; {/* 通过props向子组件传name */} &lt;Child name=\\\\\\"湫\\\\\\" myClick={this.handleClick} /&gt; &lt;/div&gt; ); } }\\"}"]]},"headers":[{"level":2,"title":"父子组件通信","slug":"父子组件通信","link":"#父子组件通信","children":[]},{"level":2,"title":"祖孙（跨级）组件通信","slug":"祖孙-跨级-组件通信","link":"#祖孙-跨级-组件通信","children":[{"level":3,"title":"2. 使用conText。","slug":"_2-使用context。","link":"#_2-使用context。","children":[]}]},{"level":2,"title":"兄弟组件","slug":"兄弟组件","link":"#兄弟组件","children":[]}],"git":{"createdTime":1705296244000,"updatedTime":1705296244000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":2,"words":601},"filePathRelative":"qianduan/框架学习/react/基础篇/组件通信.md","localizedDate":"2022年7月23日","excerpt":"<h1> React 组件通信</h1>\\n<p>在react组件间通信常见的几种情况有：父子组件通信、兄弟（非嵌套）组件通信、祖孙（跨级）组件通信。</p>\\n<h2> 父子组件通信</h2>\\n<p>父组件向子组件通信只需采用props方式传递信息，子组件中也可以通过props获取这个值。</p>\\n<p>子组件向父组件则采用props + Callback的方式，父组件为子组件绑定一个函数属性，当子组件需要给父组件传值的时候，则通过props调用该函数将参数传入到该函数当中，此时就可以在父组件中的函数中接收到该参数。</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token comment\\">// 父 -&gt; 子</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Parent</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Component</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function-variable function\\">handleClick</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"this :&gt;&gt; \\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">className</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>parent<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n        </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>h3</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">我是父组件</span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>h3</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token plain-text\\">\\n        </span><span class=\\"token punctuation\\">{</span><span class=\\"token comment\\">/* 通过props向子组件传name */</span><span class=\\"token punctuation\\">}</span><span class=\\"token plain-text\\">\\n        </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Child</span></span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>湫<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">myClick</span><span class=\\"token script language-javascript\\"><span class=\\"token script-punctuation punctuation\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>handleClick<span class=\\"token punctuation\\">}</span></span> <span class=\\"token punctuation\\">/&gt;</span></span><span class=\\"token plain-text\\">\\n      </span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
