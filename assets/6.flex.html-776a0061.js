import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as l,f as d}from"./app-131d0148.js";const o={},c=d('<h1 id="flex" tabindex="-1"><a class="header-anchor" href="#flex" aria-hidden="true">#</a> flex</h1><p>flex 布局的子元素不会脱离文档流</p><ul><li><strong>弹性盒子</strong>：指的是使用 <code>display:flex</code> 或 <code>display:inline-flex</code> 声明的<strong>父容器</strong>。</li><li><strong>子元素/弹性元素</strong>：指的是父容器里面的子元素们（父容器被声明为 flex 盒子的情况下）</li></ul><h3 id="flex-direction-属性" tabindex="-1"><a class="header-anchor" href="#flex-direction-属性" aria-hidden="true">#</a> flex-direction 属性</h3><p><code>flex-direction</code>：用于设置盒子中<strong>子元素</strong>的排列方向。属性值可以是：</p><table><thead><tr><th style="text-align:left;">属性值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">row</td><td style="text-align:left;">从左到右水平排列子元素（默认值）</td></tr><tr><td style="text-align:left;">column</td><td style="text-align:left;">从上到下垂直排列子元素</td></tr><tr><td style="text-align:left;">row-reverse</td><td style="text-align:left;">从右向左排列子元素</td></tr><tr><td style="text-align:left;">column-reverse</td><td style="text-align:left;">从下到上垂直排列子元素</td></tr></tbody></table><p><code>flex-wrap</code>：控制子元素溢出时的换行处理。</p><p><code>justify-content</code>：控制子元素在主轴上的排列方式。</p><ul><li><code>flex-start</code> 从主轴的起点对齐（默认值）</li><li><code>flex-end</code> 从主轴的终点对齐</li><li><code>center</code> 居中对齐</li><li><code>space-around</code> 在父盒子里平分</li><li><code>space-between</code> 两端对齐 平分</li></ul><p><code>align-items</code>：设置子元素在<strong>侧轴上的对齐方式</strong>。</p><ul><li><code>flex-start</code> 从侧轴开始的方向对齐</li><li><code>flex-end</code> 从侧轴结束的方向对齐</li><li><code>baseline</code> 基线 默认同flex-start</li><li><code>center</code> 中间对齐</li><li><code>stretch</code> 拉伸</li></ul><p><code>flex</code>属性：设置子盒子的权重</p>',12),i=[c];function r(n,a){return t(),l("div",null,i)}const x=e(o,[["render",r],["__file","6.flex.html.vue"]]);export{x as default};
