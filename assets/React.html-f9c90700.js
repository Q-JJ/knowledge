const e=JSON.parse('{"key":"v-a81d5dc6","path":"/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/%E5%9F%BA%E7%A1%80%E7%AF%87/React.html","title":"react","lang":"zh-CN","frontmatter":{"icon":"date","order":1,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"react 特点 采用组件化模式、声明式编码，提高开发效率及组件复用率 在React Native中可以使用React语法进行移动端开发 使用虚拟DOM+优秀的Diffing 算法，尽量减少与真实DOM的交互，实现视图的高效更新 虚拟DOM 本质是Object类型的对象 虚拟DOM最终会被React转化为真实DOM，呈现在页面上。 渲染虚拟DOM(元素) 语法: ReactDOM.render(virtualDOM,containerDOM) 作用: 将虚拟DOM元素渲染到页面中的真实容器DOM中显示","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/%E5%9F%BA%E7%A1%80%E7%AF%87/React.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"react"}],["meta",{"property":"og:description","content":"react 特点 采用组件化模式、声明式编码，提高开发效率及组件复用率 在React Native中可以使用React语法进行移动端开发 使用虚拟DOM+优秀的Diffing 算法，尽量减少与真实DOM的交互，实现视图的高效更新 虚拟DOM 本质是Object类型的对象 虚拟DOM最终会被React转化为真实DOM，呈现在页面上。 渲染虚拟DOM(元素) 语法: ReactDOM.render(virtualDOM,containerDOM) 作用: 将虚拟DOM元素渲染到页面中的真实容器DOM中显示"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T05:24:04.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T05:24:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"react\\",\\"description\\":\\"react 特点 采用组件化模式、声明式编码，提高开发效率及组件复用率 在React Native中可以使用React语法进行移动端开发 使用虚拟DOM+优秀的Diffing 算法，尽量减少与真实DOM的交互，实现视图的高效更新 虚拟DOM 本质是Object类型的对象 虚拟DOM最终会被React转化为真实DOM，呈现在页面上。 渲染虚拟DOM(元素) 语法: ReactDOM.render(virtualDOM,containerDOM) 作用: 将虚拟DOM元素渲染到页面中的真实容器DOM中显示\\"}"]]},"headers":[{"level":2,"title":"虚拟DOM","slug":"虚拟dom","link":"#虚拟dom","children":[{"level":3,"title":"渲染虚拟DOM(元素)","slug":"渲染虚拟dom-元素","link":"#渲染虚拟dom-元素","children":[]}]},{"level":2,"title":"JSX","slug":"jsx","link":"#jsx","children":[]},{"level":2,"title":"React创建组件","slug":"react创建组件","link":"#react创建组件","children":[]},{"level":2,"title":"事件处理","slug":"事件处理","link":"#事件处理","children":[]},{"level":2,"title":"表单控制（onChange）","slug":"表单控制-onchange","link":"#表单控制-onchange","children":[]},{"level":2,"title":"state和props","slug":"state和props","link":"#state和props","children":[{"level":3,"title":"state","slug":"state","link":"#state","children":[]},{"level":3,"title":"props","slug":"props","link":"#props","children":[]},{"level":3,"title":"props校验","slug":"props校验","link":"#props校验","children":[]}]},{"level":2,"title":"ref","slug":"ref","link":"#ref","children":[]}],"git":{"createdTime":1705296244000,"updatedTime":1705296244000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":4.95,"words":1485},"filePathRelative":"qianduan/框架学习/react/基础篇/React.md","localizedDate":"2022年7月23日","excerpt":"<h1> react</h1>\\n<p>特点</p>\\n<p>采用组件化模式、声明式编码，提高开发效率及组件复用率</p>\\n<p>在React Native中可以使用React语法进行移动端开发</p>\\n<p>使用虚拟DOM+优秀的Diffing 算法，尽量减少与真实DOM的交互，实现视图的高效更新</p>\\n<h2> 虚拟DOM</h2>\\n<ol>\\n<li>本质是Object类型的对象</li>\\n<li>虚拟DOM最终会被React转化为真实DOM，呈现在页面上。</li>\\n</ol>\\n<h3> 渲染虚拟DOM(元素)</h3>\\n<ol>\\n<li>语法:  <code>ReactDOM.render(virtualDOM,containerDOM)</code></li>\\n<li>作用: 将虚拟DOM元素渲染到页面中的真实容器DOM中显示</li>\\n</ol>","autoDesc":true}');export{e as data};
