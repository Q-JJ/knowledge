const o=JSON.parse('{"key":"v-6d3f460c","path":"/%E7%BB%8F%E9%AA%8C%E5%B0%8F%E8%AE%B0/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98.html","title":"浏览器本地缓存","lang":"zh-CN","frontmatter":{"icon":"date","order":4,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"浏览器本地缓存 cookie sessionStorage localStorage 区别 Cookie、SessionStorage、 LocalStorage都是浏览器的本地存储。 它们的共同点：都是存储在浏览器本地的 它们的区别： cookie是由服务器端写入的，而SessionStorage、 LocalStorage都是由前端写入的 cookie的生命周期是由服务器端在写入的时候就设置好的，LocalStorage是写入就一直存在，除非手动清除，SessionStorage是页面关闭的时候就会自动清除。 cookie的存储空间比较小大概4KB，SessionStorage、 LocalStorage存储空间比较大，大概5M。 Cookie、SessionStorage、 LocalStorage数据共享都遵循同源原则，SessionStorage还限制必须是同一个页面。在前端给后端发送请求的时候会自动携带Cookie中的数据，但是SessionStorage、 LocalStorage不会 Cookie一般用于存储登录验证信息SessionID或者token，LocalStorage常用于存储不易变动的数据，减轻服务器的压力，SessionStorage可以用来检测用户是否是刷新进入页面，如音乐播放器恢复播放进度条的功能。","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/%E7%BB%8F%E9%AA%8C%E5%B0%8F%E8%AE%B0/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"浏览器本地缓存"}],["meta",{"property":"og:description","content":"浏览器本地缓存 cookie sessionStorage localStorage 区别 Cookie、SessionStorage、 LocalStorage都是浏览器的本地存储。 它们的共同点：都是存储在浏览器本地的 它们的区别： cookie是由服务器端写入的，而SessionStorage、 LocalStorage都是由前端写入的 cookie的生命周期是由服务器端在写入的时候就设置好的，LocalStorage是写入就一直存在，除非手动清除，SessionStorage是页面关闭的时候就会自动清除。 cookie的存储空间比较小大概4KB，SessionStorage、 LocalStorage存储空间比较大，大概5M。 Cookie、SessionStorage、 LocalStorage数据共享都遵循同源原则，SessionStorage还限制必须是同一个页面。在前端给后端发送请求的时候会自动携带Cookie中的数据，但是SessionStorage、 LocalStorage不会 Cookie一般用于存储登录验证信息SessionID或者token，LocalStorage常用于存储不易变动的数据，减轻服务器的压力，SessionStorage可以用来检测用户是否是刷新进入页面，如音乐播放器恢复播放进度条的功能。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-29T03:52:20.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-29T03:52:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"浏览器本地缓存\\",\\"description\\":\\"浏览器本地缓存 cookie sessionStorage localStorage 区别 Cookie、SessionStorage、 LocalStorage都是浏览器的本地存储。 它们的共同点：都是存储在浏览器本地的 它们的区别： cookie是由服务器端写入的，而SessionStorage、 LocalStorage都是由前端写入的 cookie的生命周期是由服务器端在写入的时候就设置好的，LocalStorage是写入就一直存在，除非手动清除，SessionStorage是页面关闭的时候就会自动清除。 cookie的存储空间比较小大概4KB，SessionStorage、 LocalStorage存储空间比较大，大概5M。 Cookie、SessionStorage、 LocalStorage数据共享都遵循同源原则，SessionStorage还限制必须是同一个页面。在前端给后端发送请求的时候会自动携带Cookie中的数据，但是SessionStorage、 LocalStorage不会 Cookie一般用于存储登录验证信息SessionID或者token，LocalStorage常用于存储不易变动的数据，减轻服务器的压力，SessionStorage可以用来检测用户是否是刷新进入页面，如音乐播放器恢复播放进度条的功能。\\"}"]]},"headers":[{"level":2,"title":"cookie sessionStorage localStorage 区别","slug":"cookie-sessionstorage-localstorage-区别","link":"#cookie-sessionstorage-localstorage-区别","children":[]}],"git":{"createdTime":1703821940000,"updatedTime":1703821940000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":0.97,"words":290},"filePathRelative":"经验小记/前端知识整理（重要）/浏览器本地缓存.md","localizedDate":"2022年7月23日","excerpt":"<h1> 浏览器本地缓存</h1>\\n<h2> cookie sessionStorage localStorage 区别</h2>\\n<p>Cookie、SessionStorage、 LocalStorage都是浏览器的本地存储。</p>\\n<p>它们的共同点：都是存储在浏览器本地的</p>\\n<p>它们的区别：</p>\\n<ul>\\n<li>cookie是由服务器端写入的，而SessionStorage、 LocalStorage都是由前端写入的</li>\\n<li>cookie的生命周期是由服务器端在写入的时候就设置好的，LocalStorage是写入就一直存在，除非手动清除，SessionStorage是页面关闭的时候就会自动清除。</li>\\n<li>cookie的存储空间比较小大概4KB，SessionStorage、 LocalStorage存储空间比较大，大概5M。</li>\\n<li>Cookie、SessionStorage、 LocalStorage数据共享都遵循同源原则，SessionStorage还限制必须是同一个页面。在前端给后端发送请求的时候会自动携带Cookie中的数据，但是SessionStorage、 LocalStorage不会</li>\\n<li>Cookie一般用于存储登录验证信息SessionID或者token，LocalStorage常用于存储不易变动的数据，减轻服务器的压力，SessionStorage可以用来检测用户是否是刷新进入页面，如音乐播放器恢复播放进度条的功能。</li>\\n</ul>","autoDesc":true}');export{o as data};
