import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-131d0148.js";const o={},p=t(`<h1 id="元素偏移量-offset" tabindex="-1"><a class="header-anchor" href="#元素偏移量-offset" aria-hidden="true">#</a> 元素偏移量 offset</h1><p>我们使用 offset 系列相关属性可以动态的得到该元素的位置（偏移）、大小等。</p><ul><li>获得元素距离带有定位父元素的位置</li><li>获得元素自身的大小（宽度高度）</li><li>注意： 返回的数值都不带单位</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
        <span class="token comment">// offset 系列</span>
        <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.father&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.son&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 1.可以得到元素的偏移 位置 返回的不带单位的数值  </span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span>offsetTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 它以带有定位的父亲为准  如果么有父亲或者父亲没有定位 则以 body 为准</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> w <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.w&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2.可以得到元素的大小 宽度和高度 是包含padding + border + width </span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>w<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>w<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3. 返回带有定位的父亲 否则返回的是body</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>offsetParent<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回带有定位的父亲 否则返回的是body</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回父亲 是最近一级的父亲 亲爸爸 不管父亲有没有定位</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>offset 与 style 区别</p><p>​ offset 可以得到任意样式表中的样式值；style 只能得到行内样式表中的样式值</p><p>​ offset 系列获得的数值是没有单位的；style.width 获得的是带有单位的字符串</p><p>​ offsetWidth 包含padding+border+width；style.width 获得不包含padding和border 的值</p><p>​ offsetWidth 等属性是只读属性，只能获取不能赋值；style.width 是可读写属性，可以获取也可以赋值</p><p>​ 我们想要获取元素大小位置，用offset更合适；要给元素更改值，则需要用style改变</p><h3 id="定时器" tabindex="-1"><a class="header-anchor" href="#定时器" aria-hidden="true">#</a> 定时器</h3><ol><li><p>setTimeout()</p><p>window.setTimeout(调用函数, [延迟的毫秒数]);</p><p>注意：</p><ol><li>window 可以省略。</li><li>这个调用函数可以直接写函数，或者写函数名或者采取字符串‘函数名()&#39;三种形式。第三种不推荐</li><li>延迟的毫秒数省略默认是 0，如果写，必须是毫秒。</li><li>因为定时器可能有很多，所以我们经常给定时器赋值一个标识符。</li><li>setTimeout() 这个调用函数我们也称为回调函数 callback</li></ol></li></ol><p>停止 setTimeout() 定时器</p><p>window.clearTimeout(timeoutID)</p><ol start="2"><li><p>setInterval()</p><p>window.setInterval(回调函数, [间隔的毫秒数]);</p><blockquote><p>setTimeout 延时时间到了，就去调用这个回调函数，只调用一次 就结束了这个定时器</p><p>setInterval 每隔这个延时时间，就去调用这个回调函数，会调用很多次，重复调用这个函数</p></blockquote></li></ol><p>停止 setInterval() 定时器: window.clearInterval(intervalID);</p>`,16),e=[p];function c(l,i){return s(),a("div",null,e)}const d=n(o,[["render",c],["__file","11.offset.html.vue"]]);export{d as default};
