import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as s,f as n}from"./app-131d0148.js";const e={},o=n(`<h1 id="reactrouter-6" tabindex="-1"><a class="header-anchor" href="#reactrouter-6" aria-hidden="true">#</a> ReactRouter 6</h1><p>安装：<code>npm install --save react-router-dom</code></p><p>与React Router 5.x 版本相比，改变了什么？</p><ol><li>内置组件的变化：移除<code>&lt;Switch/&gt;</code> ，新增 <code>&lt;Routes/&gt;</code>等。</li><li>语法的变化：<code>component={About}</code> 变为 <code>element={&lt;About/&gt;}</code>等。</li><li>新增多个hook：<code>useParams</code>、<code>useNavigate</code>、<code>useMatch</code>等。</li></ol><h2 id="路由组件传递参数" tabindex="-1"><a class="header-anchor" href="#路由组件传递参数" aria-hidden="true">#</a> 路由组件传递参数</h2><h3 id="_1-params参数" tabindex="-1"><a class="header-anchor" href="#_1-params参数" aria-hidden="true">#</a> 1. params参数</h3><p>路由链接(携带参数)：<code>&lt;Link to=&#39;/demo/test/tom/18&#39;}&gt;详情&lt;/Link&gt;</code></p><p>注册路由(声明接收)：<code>&lt;Route path=&quot;/demo/test/:name/:age&quot; component={Test}/&gt;</code></p><p>接收参数：this.props.match.params</p><h3 id="_2-search参数" tabindex="-1"><a class="header-anchor" href="#_2-search参数" aria-hidden="true">#</a> 2. search参数</h3><p>路由链接(携带参数)：<code>&lt;Link to=&#39;/demo/test?name=tom&amp;age=18&#39;}&gt;详情&lt;/Link&gt;</code></p><p>注册路由(无需声明，正常注册即可)：<code>&lt;Route path=&quot;/demo/test&quot; component={Test}/&gt;</code></p><p>接收参数：this.props.location.search</p><p>备注：获取到的search是urlencoded编码字符串，需要借助querystring解析</p><h3 id="_3-state参数" tabindex="-1"><a class="header-anchor" href="#_3-state参数" aria-hidden="true">#</a> 3. state参数</h3><p>路由链接(携带参数)：<code>&lt;Link to={{pathname:&#39;/demo/test&#39;,state:{name:&#39;tom&#39;,age:18}}}&gt;详情&lt;/Link&gt;</code></p><p>注册路由(无需声明，正常注册即可)：<code>&lt;Route path=&quot;/demo/test&quot; component={Test}/&gt;</code></p><p>接收参数：this.props.location.state</p><p>备注：刷新也可以保留住参数</p><h2 id="redirect的使用" tabindex="-1"><a class="header-anchor" href="#redirect的使用" aria-hidden="true">#</a> Redirect的使用</h2><p>1.一般写在所有路由注册的最下方，当所有路由都无法匹配时，跳转到Redirect指定的路由</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
	</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>About<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
	</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/home<span class="token punctuation">&quot;</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Home<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
	</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Redirect</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Switch</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由跳转" tabindex="-1"><a class="header-anchor" href="#路由跳转" aria-hidden="true">#</a> 路由跳转</h2><ul><li><code>this.props.history.push()</code> 方法用于在JS中实现页面跳转</li><li><code>this.props.history.go(-1)</code> 用来实现页面的前进（1）和后退(-1)</li></ul>`,24),p=[o];function c(l,i){return t(),s("div",null,p)}const d=a(e,[["render",c],["__file","ReactRouter.html.vue"]]);export{d as default};
