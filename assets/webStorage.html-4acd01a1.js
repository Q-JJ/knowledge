import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as l,f as t}from"./app-131d0148.js";const r={},a=t('<h1 id="webstorage" tabindex="-1"><a class="header-anchor" href="#webstorage" aria-hidden="true">#</a> webStorage</h1><ol><li><p>存储内容大小一般支持5MB左右（不同浏览器可能还不一样）</p></li><li><p>浏览器端通过 <strong>Window.sessionStorage</strong> 和 <strong>Window.localStorage</strong> 属性来实现本地存储机制。</p></li><li><p>相关API</p><ul><li><p><code>xxxxxStorage.setItem(&#39;key&#39;, &#39;value&#39;);</code><br> 该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值。</p></li><li><p><code>xxxxxStorage.getItem(&#39;person&#39;);</code></p><p>​ 该方法接受一个键名作为参数，返回键名对应的值。</p></li><li><p><code>xxxxxStorage.removeItem(&#39;key&#39;);</code></p><p>​ 该方法接受一个键名作为参数，并把该键名从存储中删除。</p></li><li><p><code> xxxxxStorage.clear()</code></p><p>​ 该方法会清空存储中的所有数据。</p></li></ul><blockquote><ol><li>SessionStorage存储的内容会随着浏览器窗口关闭而消失。</li><li>LocalStorage存储的内容，需要手动清除才会消失。</li><li><code>xxxxxStorage.getItem(xxx)</code>如果xxx对应的value获取不到，那么getItem的返回值是null。</li><li><code>JSON.parse(null)</code>的结果依然是null。</li></ol></blockquote></li></ol>',2),i=[a];function c(x,s){return o(),l("div",null,i)}const d=e(r,[["render",c],["__file","webStorage.html.vue"]]);export{d as default};
