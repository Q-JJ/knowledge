const e=JSON.parse('{"key":"v-52a41116","path":"/qianduan/%E5%9F%BA%E7%A1%80/JS/5.%E9%97%AD%E5%8C%85.html","title":"闭包","lang":"zh-CN","frontmatter":{"icon":"date","order":5,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"闭包 闭包是指有权访问另一个函数作用域中的变量的函数。 优点：延长局部变量的生命周期 缺点：我们尽可能减少使用闭包，因为它会消耗内存。过多的闭包可能会导致内存泄漏 相关信息 在js中变量的作用域属于函数作用域, 在函数执行完后,作用域就会被清理,内存也会随之被回收; 但是由于闭包函数是建立在函数内部的子函数, 由于其可访问上级作用域,即使上级函数执行完, 作用域也不会随之销毁, 这时的子函数(也就是闭包),便拥有了访问上级作用域中变量的权限,即使上级函数执行完后作用域内的值也不会被销毁。","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/qianduan/%E5%9F%BA%E7%A1%80/JS/5.%E9%97%AD%E5%8C%85.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"闭包"}],["meta",{"property":"og:description","content":"闭包 闭包是指有权访问另一个函数作用域中的变量的函数。 优点：延长局部变量的生命周期 缺点：我们尽可能减少使用闭包，因为它会消耗内存。过多的闭包可能会导致内存泄漏 相关信息 在js中变量的作用域属于函数作用域, 在函数执行完后,作用域就会被清理,内存也会随之被回收; 但是由于闭包函数是建立在函数内部的子函数, 由于其可访问上级作用域,即使上级函数执行完, 作用域也不会随之销毁, 这时的子函数(也就是闭包),便拥有了访问上级作用域中变量的权限,即使上级函数执行完后作用域内的值也不会被销毁。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-29T03:52:20.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-29T03:52:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"闭包\\",\\"description\\":\\"闭包 闭包是指有权访问另一个函数作用域中的变量的函数。 优点：延长局部变量的生命周期 缺点：我们尽可能减少使用闭包，因为它会消耗内存。过多的闭包可能会导致内存泄漏 相关信息 在js中变量的作用域属于函数作用域, 在函数执行完后,作用域就会被清理,内存也会随之被回收; 但是由于闭包函数是建立在函数内部的子函数, 由于其可访问上级作用域,即使上级函数执行完, 作用域也不会随之销毁, 这时的子函数(也就是闭包),便拥有了访问上级作用域中变量的权限,即使上级函数执行完后作用域内的值也不会被销毁。\\"}"]]},"headers":[{"level":2,"title":"闭包的特性","slug":"闭包的特性","link":"#闭包的特性","children":[]}],"git":{"createdTime":1703821940000,"updatedTime":1703821940000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":1.44,"words":431},"filePathRelative":"qianduan/基础/JS/5.闭包.md","localizedDate":"2022年7月23日","excerpt":"<h1> 闭包</h1>\\n<p>闭包是指有权访问另一个函数作用域中的变量的函数。</p>\\n<ul>\\n<li>\\n<p>优点：延长局部变量的生命周期</p>\\n</li>\\n<li>\\n<p>缺点：我们尽可能减少使用闭包，因为它会消耗内存。过多的闭包可能会导致内存泄漏</p>\\n</li>\\n</ul>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>在js中变量的作用域属于函数作用域, 在函数执行完后,作用域就会被清理,内存也会随之被回收;</p>\\n<p>但是由于闭包函数是建立在函数内部的子函数, 由于其可访问上级作用域,即使上级函数执行完, 作用域也不会随之销毁, 这时的子函数(也就是闭包),便拥有了访问上级作用域中变量的权限,即使上级函数执行完后作用域内的值也不会被销毁。</p>\\n</div>","autoDesc":true}');export{e as data};
