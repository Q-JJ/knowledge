import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c,f as d}from"./app-131d0148.js";const o={},a=d('<h1 id="普通函数和箭头函数" tabindex="-1"><a class="header-anchor" href="#普通函数和箭头函数" aria-hidden="true">#</a> 普通函数和箭头函数</h1><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2><ol><li><p>箭头函数是匿名函数，不能作为构造函数，不能使用new</p></li><li><p>箭头函数不绑定<code>arguments</code>，取而代之用<code>rest</code>参数...解决</p></li><li><p>箭头函数不绑定<code>this</code>，会捕获其所在的上下文的this值，作为自己的this值</p></li><li><p>箭头函数通过 <code>call() 或 apply()</code> 方法调用一个函数时，只传入了一个参数，对 this 并没有影响。</p></li><li><p>箭头函数没有原型属性</p></li><li><p>箭头函数不能当做<code>Generator</code>函数,不能使用<code>yield</code>关键字</p></li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li><p>箭头函数的 <code>this </code>永远指向其上下文的 <code> this</code> ，任何方法都改变不了其指向，如<code>call() , bind() , apply()</code></p></li><li><p>普通函数的this指向调用它的那个对象</p></li></ul>',5),l=[a];function t(r,h){return i(),c("div",null,l)}const n=e(o,[["render",t],["__file","8.普通函数和箭头函数.html.vue"]]);export{n as default};
