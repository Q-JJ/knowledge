const e=JSON.parse('{"key":"v-4226dc96","path":"/%E7%BB%8F%E9%AA%8C%E5%B0%8F%E8%AE%B0/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89/js.html","title":"JS","lang":"zh-CN","frontmatter":{"icon":"date","order":7,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"JS JS ES6 新增symbol类型 表示独一无二的值，用来定义独一无二的对象属性名; const/let 都是用来声明变量,不可重复声明，具有块级作用域。存在暂时性死区，也就是不存在变量提升。 变量的解构赋值(包含数组、对象、字符串、数字及布尔值,函数参数),剩余运算符(...rest); 模板字符串(${data}); 扩展运算符(数组、对象);; 箭头函数; Set和Map数据结构; Proxy/Reflect; Promise; async函数; Class; Module语法(import/export)。","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/%E7%BB%8F%E9%AA%8C%E5%B0%8F%E8%AE%B0/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89/js.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"JS"}],["meta",{"property":"og:description","content":"JS JS ES6 新增symbol类型 表示独一无二的值，用来定义独一无二的对象属性名; const/let 都是用来声明变量,不可重复声明，具有块级作用域。存在暂时性死区，也就是不存在变量提升。 变量的解构赋值(包含数组、对象、字符串、数字及布尔值,函数参数),剩余运算符(...rest); 模板字符串(${data}); 扩展运算符(数组、对象);; 箭头函数; Set和Map数据结构; Proxy/Reflect; Promise; async函数; Class; Module语法(import/export)。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-29T03:52:20.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-29T03:52:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"JS\\",\\"description\\":\\"JS JS ES6 新增symbol类型 表示独一无二的值，用来定义独一无二的对象属性名; const/let 都是用来声明变量,不可重复声明，具有块级作用域。存在暂时性死区，也就是不存在变量提升。 变量的解构赋值(包含数组、对象、字符串、数字及布尔值,函数参数),剩余运算符(...rest); 模板字符串(${data}); 扩展运算符(数组、对象);; 箭头函数; Set和Map数据结构; Proxy/Reflect; Promise; async函数; Class; Module语法(import/export)。\\"}"]]},"headers":[{"level":2,"title":"ES6","slug":"es6","link":"#es6","children":[]}],"git":{"createdTime":1703821940000,"updatedTime":1703821940000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":0.53,"words":159},"filePathRelative":"经验小记/前端知识整理（重要）/js.md","localizedDate":"2022年7月23日","excerpt":"<h1> JS</h1>\\n<p><a href=\\"/knowledge/qianduan/%E5%9F%BA%E7%A1%80/JS/\\" target=\\"blank\\">JS</a></p>\\n<h2> ES6</h2>\\n<ul>\\n<li>新增symbol类型 表示独一无二的值，用来定义独一无二的对象属性名;</li>\\n<li>const/let  都是用来声明变量,不可重复声明，具有块级作用域。存在暂时性死区，也就是不存在变量提升。</li>\\n<li>变量的解构赋值(包含数组、对象、字符串、数字及布尔值,函数参数),剩余运算符(...rest);</li>\\n<li>模板字符串(<code>${data}</code>);</li>\\n<li>扩展运算符(数组、对象);;</li>\\n<li>箭头函数;</li>\\n<li>Set和Map数据结构;</li>\\n<li>Proxy/Reflect;</li>\\n<li>Promise;</li>\\n<li>async函数;</li>\\n<li>Class;</li>\\n<li>Module语法(import/export)。</li>\\n</ul>","autoDesc":true}');export{e as data};
