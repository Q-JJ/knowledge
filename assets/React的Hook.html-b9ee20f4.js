const e=JSON.parse('{"key":"v-70ae1c24","path":"/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/%E6%8B%93%E5%B1%95/React%E7%9A%84Hook.html","title":"react Hooks","lang":"zh-CN","frontmatter":{"icon":"date","order":2,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"react Hooks 三个常用的Hook：useState()、useEffect()、useRef() State Hook State Hook让函数组件也可以有state状态, 并进行状态数据的读写操作 const [xxx, setXxx] = React.useState(initValue) //参数: 第一次初始化指定的值在内部作缓存 //返回值: 包含2个元素的数组:1.state值 2. 更新函数","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/%E6%8B%93%E5%B1%95/React%E7%9A%84Hook.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"react Hooks"}],["meta",{"property":"og:description","content":"react Hooks 三个常用的Hook：useState()、useEffect()、useRef() State Hook State Hook让函数组件也可以有state状态, 并进行状态数据的读写操作 const [xxx, setXxx] = React.useState(initValue) //参数: 第一次初始化指定的值在内部作缓存 //返回值: 包含2个元素的数组:1.state值 2. 更新函数"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T05:24:04.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T05:24:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"react Hooks\\",\\"description\\":\\"react Hooks 三个常用的Hook：useState()、useEffect()、useRef() State Hook State Hook让函数组件也可以有state状态, 并进行状态数据的读写操作 const [xxx, setXxx] = React.useState(initValue) //参数: 第一次初始化指定的值在内部作缓存 //返回值: 包含2个元素的数组:1.state值 2. 更新函数\\"}"]]},"headers":[{"level":2,"title":"State Hook","slug":"state-hook","link":"#state-hook","children":[]},{"level":2,"title":"Effect Hook","slug":"effect-hook","link":"#effect-hook","children":[]},{"level":2,"title":"Ref Hook","slug":"ref-hook","link":"#ref-hook","children":[]},{"level":2,"title":"自定义Hook","slug":"自定义hook","link":"#自定义hook","children":[]},{"level":2,"title":"DOM节点hook","slug":"dom节点hook","link":"#dom节点hook","children":[{"level":3,"title":"forwardRef","slug":"forwardref","link":"#forwardref","children":[]},{"level":3,"title":"useImperativeHandle","slug":"useimperativehandle","link":"#useimperativehandle","children":[]}]}],"git":{"createdTime":1705296244000,"updatedTime":1705296244000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":2.33,"words":700},"filePathRelative":"qianduan/框架学习/react/拓展/React的Hook.md","localizedDate":"2022年7月23日","excerpt":"<h1> react Hooks</h1>\\n<p>三个常用的Hook：<code>useState()、useEffect()、useRef()</code></p>\\n<h2> State Hook</h2>\\n<p>State Hook让函数组件也可以有state状态, 并进行状态数据的读写操作</p>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code>    <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>xxx<span class=\\"token punctuation\\">,</span> setXxx<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> React<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">useState</span><span class=\\"token punctuation\\">(</span>initValue<span class=\\"token punctuation\\">)</span> \\n    <span class=\\"token comment\\">//参数: 第一次初始化指定的值在内部作缓存</span>\\n    <span class=\\"token comment\\">//返回值: 包含2个元素的数组:1.state值 2. 更新函数</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
