const e=JSON.parse(`{"key":"v-f5bd9a94","path":"/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/Redux/%E6%A0%B8%E5%BF%83API.html","title":"redux核心API","lang":"zh-CN","frontmatter":{"icon":"date","order":2,"headerDepth":3,"date":"2022-07-23T00:00:00.000Z","readingTime":"N/A","word":"N/A","lastUpdated":true,"article":false,"description":"redux核心API 核心API createstore()：创建包含指定reducer的store对象 store对象: redux库最核心的管理对象 state reducer 核心方法: getState() dispatch(action) subscribe(listener) 具体编码: store.getState() store.dispatch({type:'INCREMENT', number}) store.subscribe(render) applyMiddleware()：应用上基于redux的中间件(插件库) combineReducers()：合并多个reducer函数","head":[["meta",{"property":"og:url","content":"https://q-jj.github.io/knowledge/knowledge/qianduan/%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/react/Redux/%E6%A0%B8%E5%BF%83API.html"}],["meta",{"property":"og:site_name","content":"湫的知识海洋"}],["meta",{"property":"og:title","content":"redux核心API"}],["meta",{"property":"og:description","content":"redux核心API 核心API createstore()：创建包含指定reducer的store对象 store对象: redux库最核心的管理对象 state reducer 核心方法: getState() dispatch(action) subscribe(listener) 具体编码: store.getState() store.dispatch({type:'INCREMENT', number}) store.subscribe(render) applyMiddleware()：应用上基于redux的中间件(插件库) combineReducers()：合并多个reducer函数"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-15T05:24:04.000Z"}],["meta",{"property":"article:author","content":"Yivn"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-15T05:24:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"redux核心API\\",\\"description\\":\\"redux核心API 核心API createstore()：创建包含指定reducer的store对象 store对象: redux库最核心的管理对象 state reducer 核心方法: getState() dispatch(action) subscribe(listener) 具体编码: store.getState() store.dispatch({type:'INCREMENT', number}) store.subscribe(render) applyMiddleware()：应用上基于redux的中间件(插件库) combineReducers()：合并多个reducer函数\\"}"]]},"headers":[{"level":2,"title":"核心API","slug":"核心api","link":"#核心api","children":[]},{"level":2,"title":"react-redux","slug":"react-redux","link":"#react-redux","children":[]}],"git":{"createdTime":1705296244000,"updatedTime":1705296244000,"contributors":[{"name":"Q-JJ","email":"J001222@163.com","commits":1}]},"readingTime":{"minutes":0.63,"words":189},"filePathRelative":"qianduan/框架学习/react/Redux/核心API.md","localizedDate":"2022年7月23日","excerpt":"<h1> redux核心API</h1>\\n<h2> 核心API</h2>\\n<ul>\\n<li>\\n<p>createstore()：创建包含指定reducer的store对象</p>\\n</li>\\n<li>\\n<p>store对象: redux库最核心的管理对象</p>\\n<ul>\\n<li>state</li>\\n<li>reducer</li>\\n</ul>\\n</li>\\n<li>\\n<p>核心方法:</p>\\n<ul>\\n<li>getState()</li>\\n<li>dispatch(action)</li>\\n<li>subscribe(listener)</li>\\n</ul>\\n</li>\\n<li>\\n<p>具体编码:</p>\\n<ul>\\n<li>store.getState()</li>\\n<li>store.dispatch({type:'INCREMENT', number})</li>\\n<li>store.subscribe(render)</li>\\n</ul>\\n</li>\\n<li>\\n<p>applyMiddleware()：应用上基于redux的中间件(插件库)</p>\\n</li>\\n<li>\\n<p>combineReducers()：合并多个reducer函数</p>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
