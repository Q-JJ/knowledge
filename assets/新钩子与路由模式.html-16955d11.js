import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,f as l}from"./app-131d0148.js";const h={},o=l('<h1 id="两个新钩子与两个路由模式" tabindex="-1"><a class="header-anchor" href="#两个新钩子与两个路由模式" aria-hidden="true">#</a> 两个新钩子与两个路由模式</h1><h2 id="两个新的生命周期钩子" tabindex="-1"><a class="header-anchor" href="#两个新的生命周期钩子" aria-hidden="true">#</a> 两个新的生命周期钩子</h2><p>作用：路由组件所独有的两个钩子，用于捕获路由组件的激活状态。</p><ol><li><p><code>activated</code>路由组件被激活时触发。</p></li><li><p><code>deactivated</code>路由组件失活时触发。</p></li></ol><h2 id="路由器的两种工作模式" tabindex="-1"><a class="header-anchor" href="#路由器的两种工作模式" aria-hidden="true">#</a> 路由器的两种工作模式</h2><ol><li><p>对于一个url来说，什么是hash值？—— #及其后面的内容就是hash值。</p></li><li><p>hash值不会包含在 HTTP 请求中，即：hash值不会带给服务器。</p></li><li><p>hash模式</p><ol><li>地址中永远带着#号，不美观 。</li><li>若以后将地址通过第三方手机app分享，若app校验严格，则地址会被标记为不合法。</li><li>兼容性较好。</li></ol></li><li><p><strong>history模式</strong></p><ol><li>地址干净，美观 。</li><li>兼容性和hash模式相比略差。</li><li>应用部署上线时需要后端人员支持，解决刷新页面服务端404的问题。</li></ol></li></ol>',6),t=[o];function r(c,d){return a(),e("div",null,t)}const _=i(h,[["render",r],["__file","新钩子与路由模式.html.vue"]]);export{_ as default};
