import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as e,f as n}from"./app-131d0148.js";const t="/knowledge/assets/redux原理图-3ae7e889.png",r={},p=n('<h1 id="redux" tabindex="-1"><a class="header-anchor" href="#redux" aria-hidden="true">#</a> redux</h1><p>Redux 是React最常用的集中状态管理工具，类似于Vue中的Pinia（Vuex），可以独立于框架运行</p><p>作用：集中式管理react应用中多个组件<strong>共享</strong>的状态。<br><img src="'+t+`" alt="redux原理图" loading="lazy"></p><h2 id="三个核心概念" tabindex="-1"><a class="header-anchor" href="#三个核心概念" aria-hidden="true">#</a> 三个核心概念</h2><h3 id="action-对象" tabindex="-1"><a class="header-anchor" href="#action-对象" aria-hidden="true">#</a> action（对象）</h3><ol><li><p>动作的对象</p></li><li><p>包含2个属性</p><ul><li><p>type：标识属性, 值为字符串, 唯一, 必要属性</p></li><li><p>data：数据属性, 值类型任意, 可选属性</p></li></ul></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// type属性，表示当前动作的标识</span>
<span class="token comment">// 其他的参数：表示这个动作需要用到的一些数据</span>
<span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;ADD_STUDENT&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reducer-函数" tabindex="-1"><a class="header-anchor" href="#reducer-函数" aria-hidden="true">#</a> reducer（函数）</h3><ol><li>用于初始化状态、加工状态。</li><li>加工时，根据旧的state和action， 产生新的state的纯函数</li></ol><h3 id="store-对象-唯一" tabindex="-1"><a class="header-anchor" href="#store-对象-唯一" aria-hidden="true">#</a> store（对象，唯一）</h3><ol><li><p>将state、action、reducer联系在一起的对象</p></li><li><p>如何得到此对象?</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>createStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span>
<span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">&#39;./reducers&#39;</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>getState()：获取state</p></li><li><p>dispatch(action)：分发action, 触发reducer调用, 更新的state</p></li><li><p>subscribe(listener): 注册监听, 当产生了新的state时, 自动调用</p></li></ol>`,11),o=[p];function i(c,l){return s(),e("div",null,o)}const k=a(r,[["render",i],["__file","redux.html.vue"]]);export{k as default};
