import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e}from"./app-131d0148.js";const t="/knowledge/assets/react-redux-b0c93c29.png",p={},i=e('<h1 id="redux核心api" tabindex="-1"><a class="header-anchor" href="#redux核心api" aria-hidden="true">#</a> redux核心API</h1><h2 id="核心api" tabindex="-1"><a class="header-anchor" href="#核心api" aria-hidden="true">#</a> 核心API</h2><ul><li><p>createstore()：创建包含指定reducer的store对象</p></li><li><p>store对象: redux库最核心的管理对象</p><ul><li>state</li><li>reducer</li></ul></li><li><p>核心方法:</p><ul><li>getState()</li><li>dispatch(action)</li><li>subscribe(listener)</li></ul></li><li><p>具体编码:</p><ul><li>store.getState()</li><li>store.dispatch({type:&#39;INCREMENT&#39;, number})</li><li>store.subscribe(render)</li></ul></li><li><p>applyMiddleware()：应用上基于redux的中间件(插件库)</p></li><li><p>combineReducers()：合并多个reducer函数</p></li></ul><h2 id="react-redux" tabindex="-1"><a class="header-anchor" href="#react-redux" aria-hidden="true">#</a> react-redux</h2><figure><img src="'+t+`" alt="react-redux" tabindex="0" loading="lazy"><figcaption>react-redux</figcaption></figure><div class="hint-container info"><p class="hint-container-title">API</p><ol><li><p>Provider：让所有的组件都接收到 Store</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>    <span class="token comment">// main.js</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Provider</span></span> <span class="token attr-name">store</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Provider</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>useSelector()：从 Store 提取 State 数据，并监听 State 中数据的更新，只要数据发生变化，就自动重新渲染组件。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">useSelector</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>useDispatch(): 从 Store 中直接获取 dispatch 方法。</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token function">useDispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">handleCountChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></div>`,6),c=[i];function l(o,r){return s(),a("div",null,c)}const k=n(p,[["render",l],["__file","核心API.html.vue"]]);export{k as default};
